package com.intime.feria.controller;


import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.concurrent.ConcurrentHashMap;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;

import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartRequest;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.intime.feria.dao.SidosDAO;
import com.intime.feria.dao.SidosDAOImpl;
import com.intime.feria.service.BReplyService;
import com.intime.feria.service.BReviewService;
import com.intime.feria.service.BibeService;
import com.intime.feria.service.FReviewService;
import com.intime.feria.service.LikeService;
import com.intime.feria.service.UBibeService;
import com.intime.feria.vo.Bibe;
import com.intime.feria.service.UserService;
import com.intime.feria.vo.City;
import com.intime.feria.vo.Gugun;
import com.intime.feria.vo.Sido;

/* 2020-08-07 장유정(기본세팅) */
@RestController
public class AjaxController {
	
	private BReplyService bReplyService;
	private BReviewService bReviewService;
	private FReviewService fReviewService;
	private LikeService likeService;
	private UBibeService uBibeService;
	//2020.08.07이원희
	//bibeService 추가
	private BibeService bibeService;
	private UserService userService;
	private SidosDAO sidosDAO;
	
	public void setSidosDAO(SidosDAO sidosDAO) {
		this.sidosDAO = sidosDAO;
	}
	
	public void setbReplyService(BReplyService bReplyService) {
		this.bReplyService = bReplyService;
	}
	
	public void setbReviewService(BReviewService bReviewService) {
		this.bReviewService = bReviewService;
	}
	
	public void setfReviewService(FReviewService fReviewService) {
		this.fReviewService = fReviewService;
	}
	
	public void setLikeService(LikeService likeService) {
		this.likeService = likeService;
	}
	
	public void setuBibeService(UBibeService uBibeService) {
		this.uBibeService = uBibeService;
	}
	//2020.08.07 이원희
	//bibeService setter 추가
	public void setBibeService(BibeService bibeService) {
		this.bibeService = bibeService;
	}
	
	//2020.08.08 이원희
	//비베 검색 메서드
	@RequestMapping(value = "/ajax/searchBibe.feria", method = RequestMethod.GET)
	public List<Bibe> bibeSearch(@RequestParam(defaultValue = "참")String bibeName) {
		
		System.out.println(bibeName);
		
		List<Bibe> bibes = bibeService.bibeSearch(bibeName);
		
		return bibes;
		
	}
	//2020.08.08 이원희
	//비베 이미지 업로드 메서드
	@RequestMapping(value = "/ajax/uploadImage.feria", method = RequestMethod.POST)
	public Map<String, Object> bibeUpload(MultipartFile upload,HttpServletRequest request)throws Exception {
		
		System.out.println(upload);
		
		ServletContext application = request.getServletContext();
		
		String root = application.getRealPath("/");
		// System.out.println(root);
		
		String uploadPath = root+"upload"+File.separator;
		
		System.out.println(uploadPath);
		
		String fileName = upload.getOriginalFilename();
		
		UUID uuid = UUID.randomUUID();
		System.out.println(uuid);
		
		fileName = uuid + fileName;
		
		File file = new File(uploadPath + fileName);
		
		upload.transferTo(file);
		
		Map<String, Object> map = new ConcurrentHashMap<String, Object>();
		map.put("src",fileName);
		
		return map;
		
	}
}
